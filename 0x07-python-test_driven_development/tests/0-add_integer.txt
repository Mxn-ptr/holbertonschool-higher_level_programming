================================
The ``0-add_integer.txt`` module
================================

Using ``add_integer``
---------------------

Import the function:

	>>> add_integer = __import__('0-add_integer').add_integer

Test with numbers:

	>>> add_integer(1, 3)
	4
	
	>>> add_integer(0, 6)
	6

	>>> add_integer(-6, 4)
	-2

	>>> add_integer(48, 89)
	137

	>>> add_integer(2.8, 1.2)
	3

	>>> add_integer(2.5, 2.9)
	4

	>>> add_integer(-5.6, 5)
	0

With strings:

	>>> add_integer(4, "School")
	Traceback (most recent call last):
	TypeError: b must be an integer
	
	>>> add_integer("School", 4)
	Traceback (most recent call last):
	TypeError: a must be an integer

	>>> add_integer(None)
	Traceback (most recent call last):
	TypeError: a must be an integer

	>>> add_integer("Hello", "School")
	Traceback (most recent call last):
	TypeError: a must be an integer

	>>> add_integer(4.2, "Hello")
	Traceback (most recent call last):
	TypeError: b must be an integer

	>>> add_integer()
	Traceback (most recent call last):
	TypeError: add_integer() missing 1 required positional argument: 'a'

	>>> add_integer(None)
	Traceback (most recent call last):
	TypeError: a must be an integer

	>>> add_integer(23, None)
	Traceback (most recent call last):
	TypeError: b must be an integer

	>>> add_integer(float('nan'))
	Traceback (most recent call last):
	ValueError: cannot convert float NaN to integer

	>>> add_integer(float('inf'))
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer

	>>> add_integer(None, 4)
	Traceback (most recent call last):
	TypeError: a must be an integer


